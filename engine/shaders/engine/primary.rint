#version 460
#extension GL_EXT_ray_tracing : enable
#extension GL_EXT_nonuniform_qualifier : enable
#extension GL_EXT_scalar_block_layout : enable
#extension GL_GOOGLE_include_directive : enable
#include "common_types.glsl"
#include "miss.glsl"
#include "map_function"
#include "raymarch.glsl"

void main()
{
    Ray ray = Ray(vec3(gl_WorldToObjectEXT * vec4(gl_WorldRayOriginEXT, 1.0f)), 
                  vec3(gl_WorldToObjectEXT * vec4(gl_WorldRayDirectionEXT, 0.0f)));
#ifdef DEBUG_SDF
    vec3 normal = vec3(0.0, 0.0, 1.0);
    float t = -dot(ray.origin, normal) / dot(ray.direction, normal);
    reportIntersectionEXT(t, 0);
#else
    Hit hit = raymarch(ray);
    if (hit.dist > 0.0)
    {
        if (map_miss(gl_WorldRayOriginEXT + gl_WorldRayDirectionEXT * hit.dist).dist > 0.0) {
            reportIntersectionEXT(hit.dist, hit.material_id);
        }
    }
#endif
}