#version 460
#extension GL_EXT_ray_tracing : enable
#extension GL_EXT_nonuniform_qualifier : enable
#extension GL_EXT_scalar_block_layout : enable
#extension GL_GOOGLE_include_directive : enable
#include "common_types.glsl"
#include "map_function"
#include "raymarch.glsl"

hitAttributeEXT int attributes;

layout(binding = 2, set = 0, scalar) buffer Objects { Object o[]; } objects;

void main()
{
    Object object = objects.o[nonuniformEXT(gl_InstanceID)];
    Ray ray = Ray(vec3(object.world_to_model * vec4(gl_WorldRayOriginEXT, 1.0f)), 
                  vec3(object.world_to_model * vec4(gl_WorldRayDirectionEXT, 0.0f)));

    Hit hit = raymarch(ray);
    if (hit.dist > 0.0)
    {
        attributes = hit.material_id;
        uint hit_kind = 0;
        reportIntersectionEXT(hit.dist, hit_kind);
    }
}